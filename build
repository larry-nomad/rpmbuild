#!/usr/bin/env python

import sys
import os

APP_NAME = "unknown"

def GetTopDir():
    return '/tmp/%s_build' % APP_NAME

def GetRpmbuildCommand():
    _top_dir = GetTopDir()
    return "rpmbuild -bb --define '%%_topdir %s' %s/package.spec" % (_top_dir, APP_NAME)

def ParseArguments():
    global APP_NAME
    if len(sys.argv) != 2:
        return False
    APP_NAME = sys.argv[1].strip().strip('/\\')
    return True

def GetFileList():
    result = []
    for root, dirs, files in os.walk('%s' % APP_NAME):
        if root == APP_NAME:
            result.extend(dirs)
            result.extend(files)
            break
    return result

def OsExecute(cmd):
    print "[C]", cmd
    return os.system(cmd)

def InitBuildEnviroment():
    build_dir = GetTopDir()
    OsExecute("mkdir -p %s" % os.path.join(build_dir, 'SOURCES'))


def FindRpmFiles(search_dir):
    result = []
    rpms_dir = os.path.join(search_dir)
    for root, dirs, files in os.walk(rpms_dir):
        for f in files:
            if f.endswith('.rpm'):
                result.append(os.path.join(root, f))
    return result

def main():
    if not ParseArguments():
        return 2
    InitBuildEnviroment()
    build_dir = GetTopDir()
    rpmbuild_command = GetRpmbuildCommand()

    # copy source files
    package_file_list = GetFileList()
    for f in package_file_list:
        OsExecute("cp -R %s %s" % (os.path.join(APP_NAME, f), os.path.join(build_dir, 'SOURCES')))

    # rpmbuild
    cmd_code = OsExecute(rpmbuild_command)
    if cmd_code != 0: return 3

    # copy rpm
    rpm_files = FindRpmFiles(build_dir)
    print rpm_files
    for rpm_file in rpm_files:
        OsExecute("cp %s ./" % rpm_file)

    # clean
    OsExecute("rm -rf %s" % build_dir)

    return 0
    

if __name__ == "__main__":
    exit_code = main()
    sys.exit(exit_code)


